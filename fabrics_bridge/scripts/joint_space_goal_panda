#!/usr/bin/env python3

# ros imports
import rospy
from fabrics_msgs.msg import FabricsGoal, FabricsObstacleArray, FabricsObstacle
from geometry_msgs.msg import Point

from fabrics_bridge.rectangle_spheres import *


class JointSpaceExampleClient(object):
    def __init__(self):
        rospy.init_node("client_node")
        self._rate = rospy.Rate(10)
        # if param num_obs is not set, default number of obstacles is 2
        self.init_publishers()
        self.obs = FabricsObstacleArray()
        self.obs.obstacles = []
        origin = [-0.4, 0.0, 0.33]
        width = 0.34
        height = 0.52
        inflation_r = 0.05
        extra_spheres = 0
        rec_obs = rectangle_spheres(origin, width, height, inflation_r, extra_spheres)
        rec_obs = []
        for obs in rec_obs:
            o = FabricsObstacle()
            o.header.frame_id = rospy.get_param("/root_link")
            o.radius = inflation_r
            o.position = Point(
                x=obs[0],
                y=obs[1],
                z=obs[2],
            )

            self.obs.obstacles.append(o)
        
    def init_publishers(self):
        self._goal_publisher = rospy.Publisher(
            "fabrics/planning_goal", FabricsGoal, queue_size=10
        )
        self._obs_publisher = rospy.Publisher(
            "fabrics/planning_obs", FabricsObstacleArray, queue_size=10
        )

    def publish_goal(self):
        goal = FabricsGoal()
        goal.goal_joint_state.header.stamp = rospy.Time.now()
        goal.goal_joint_state.name = rospy.get_param('/joint_names')
        goal.goal_joint_state.position = [0.0, -1.0, 0.0, -1.501, 0.0, 1.8675, 0.0]
        #goal.goal_joint_state.position = [-1.7, -0.2, -1.4, -1.501, 0.0, 1.2675, 0.0]
        goal.goal_type = "joint_space"
        goal.weight_goal_0 = 3.0
        goal.tolerance_goal_0 = 0.02
        self._goal_publisher.publish(goal)

    def run(self):
        while not rospy.is_shutdown():
            self.publish_goal()
            self._obs_publisher.publish(self.obs)
            self._rate.sleep()


if __name__ == "__main__":
    client_node = JointSpaceExampleClient()
    try:
        client_node.run()
    except rospy.ROSInterruptException:
        pass
