#!/usr/bin/env python3
# general python imports
import numpy as np
import math
from scipy.spatial.transform import Rotation

# ros imports
import rospy
from geometry_msgs.msg import PoseStamped
from fabrics_msgs.msg import FabricGoal, FabricGoalArray, FabricsObstacle, FabricsObstacleArray

from visualization_msgs.msg import Marker, MarkerArray


class ClientNode(object):
    def __init__(self):
        rospy.init_node('client_node')
        self._rate = rospy.Rate(10)
        self.init_publishers()


    def init_publishers(self):
        self._goals_publisher = rospy.Publisher(
            'fabrics/planning_goal',
            PoseStamped, queue_size=10
        )


    def publish_goals(self):
        goal_data = PoseStamped()
        # goal_data.pose.position.x = rospy.get_param("goal_position_x")
        # goal_data.pose.position.y = rospy.get_param("goal_position_y")
        # goal_data.pose.position.z = rospy.get_param("goal_position_z")
        goal_data.pose.position.x = 0.8
        goal_data.pose.position.y = 0.4
        goal_data.pose.position.z = 0.8
        goal_data.pose.orientation.x = 0.0
        goal_data.pose.orientation.y = -0.7071067811865475
        goal_data.pose.orientation.z = 0.0
        goal_data.pose.orientation.w = -0.7071067811865475
        goal_data.header.frame_id = "panda_link0"

        self._goals_publisher.publish(goal_data)

    def run(self):
        while not rospy.is_shutdown():     
            self.publish_goals()
            self._rate.sleep()

if __name__ == "__main__":
    ClientNode = ClientNode()
    try:
        ClientNode.run()
    except rospy.ROSInterruptException:
        pass



